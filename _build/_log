### Starting build.
# Target: src/rc.ml.depends, tags: { debug, extension:ml, file:src/rc.ml, ocaml, ocamldep, package(ostap.syntax), quiet, rectypes, syntax(camlp5o), traverse }
ocamlfind ocamldep -syntax camlp5o -package ostap.syntax -modules src/rc.ml > src/rc.ml.depends # cached
# Target: src/Driver.ml.depends, tags: { debug, extension:ml, file:src/Driver.ml, ocaml, ocamldep, package(ostap.syntax), quiet, rectypes, syntax(camlp5o), traverse }
ocamlfind ocamldep -syntax camlp5o -package ostap.syntax -modules src/Driver.ml > src/Driver.ml.depends # cached
# Target: src/Interpret.ml.depends, tags: { debug, extension:ml, file:src/Interpret.ml, ocaml, ocamldep, package(ostap.syntax), quiet, rectypes, syntax(camlp5o), traverse }
ocamlfind ocamldep -syntax camlp5o -package ostap.syntax -modules src/Interpret.ml > src/Interpret.ml.depends
# Target: src/Language.ml.depends, tags: { debug, extension:ml, file:src/Language.ml, ocaml, ocamldep, package(ostap.syntax), quiet, rectypes, syntax(camlp5o), traverse }
ocamlfind ocamldep -syntax camlp5o -package ostap.syntax -modules src/Language.ml > src/Language.ml.depends
# Target: src/Language.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:src/Language.cmo, file:src/Language.ml, implem, ocaml, package(ostap.syntax), quiet, rectypes, syntax(camlp5o), traverse }
ocamlfind ocamlc -c -g -g -rectypes -syntax camlp5o -package ostap.syntax -I src -o src/Language.cmo src/Language.ml
# Target: src/StackMachine.ml.depends, tags: { debug, extension:ml, file:src/StackMachine.ml, ocaml, ocamldep, package(ostap.syntax), quiet, rectypes, syntax(camlp5o), traverse }
ocamlfind ocamldep -syntax camlp5o -package ostap.syntax -modules src/StackMachine.ml > src/StackMachine.ml.depends # cached
# Target: src/Interpret.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:src/Interpret.cmo, file:src/Interpret.ml, implem, ocaml, package(ostap.syntax), quiet, rectypes, syntax(camlp5o), traverse }
ocamlfind ocamlc -c -g -g -rectypes -syntax camlp5o -package ostap.syntax -I src -o src/Interpret.cmo src/Interpret.ml
+ ocamlfind ocamlc -c -g -g -rectypes -syntax camlp5o -package ostap.syntax -I src -o src/Interpret.cmo src/Interpret.ml
File "src/Interpret.ml", line 11, characters 6-950:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
Binop ("", _, _)
File "src/Interpret.ml", line 45, characters 7-18:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
[]
# Target: src/X86.ml.depends, tags: { debug, extension:ml, file:src/X86.ml, ocaml, ocamldep, package(ostap.syntax), quiet, rectypes, syntax(camlp5o), traverse }
ocamlfind ocamldep -syntax camlp5o -package ostap.syntax -modules src/X86.ml > src/X86.ml.depends
# Target: src/StackMachine.cmo, tags: { byte, compile, debug, extension:cmo, extension:ml, file:src/StackMachine.cmo, file:src/StackMachine.ml, implem, ocaml, package(ostap.syntax), quiet, rectypes, syntax(camlp5o), traverse }
ocamlfind ocamlc -c -g -g -rectypes -syntax camlp5o -package ostap.syntax -I src -o src/StackMachine.cmo src/StackMachine.ml
+ ocamlfind ocamlc -c -g -g -rectypes -syntax camlp5o -package ostap.syntax -I src -o src/StackMachine.cmo src/StackMachine.ml
File "src/StackMachine.ml", line 36, characters 27-38:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
[]
File "src/StackMachine.ml", line 38, characters 27-38:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
[]
File "src/StackMachine.ml", line 42, characters 21-32:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
[]
File "src/StackMachine.ml", line 44, characters 16-32:
Warning 8: this pattern-matching is not exhaustive.
Here is an example of a value that is not matched:
[]
File "src/StackMachine.ml", line 75, characters 3-6:
Error: This variant pattern is expected to have type Language.Expr.t
       The constructor Add does not belong to type Language.Expr.t
Command exited with code 2.
# Compilation unsuccessful.
